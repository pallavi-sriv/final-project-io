# -*- coding: utf-8 -*-
"""final_150epochs.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1fiaxPNajtAtWNW6vmk6LjUJlcBFQOTE7
"""

! pip install --upgrade --force-reinstall --no-deps kaggle

from google.colab import files
files.upload()

! mkdir ~/.kaggle
! cp kaggle.json ~/.kaggle/

! chmod 600 ~/.kaggle/kaggle.json

! kaggle datasets download -d ravishranjan/flower-dataset

! unzip flower-dataset.zip -d dataset

import tensorflow as tf
import matplotlib.pyplot as plt
import numpy as np
import os 
import pandas as pd

training_path = "/content/dataset/flowers/flowers/train_actual"
test_path = "/content/dataset/flowers/flowers/test_actual"

class_names = ['cyclamen flower','nasturtium flower','butterfly pea','canna flower','lily','bergamot flower','pink quill','foxglove','bougainvilla','rose mallow','abuliton mallow','ruellia','bromelia']

dataGen = tf.keras.preprocessing.image.ImageDataGenerator(
    rescale = 1./255,
    rotation_range=5,
    horizontal_flip=True,
    vertical_flip=True)

train_dataset_aug = dataGen.flow_from_directory(
    training_path,
    target_size = (224,224),
    batch_size = 32,
    shuffle=True,
    seed = 865)

test_dataset_aug = dataGen.flow_from_directory(
    test_path,
    target_size = (224,224),
    batch_size = 32,
    shuffle=True,
    seed = 865)

pretrained_model = tf.keras.applications.ResNet152(
    include_top=False,
    weights="imagenet",
    input_shape=(224,224,3),
)

pretrained_model.trainable = False

model = tf.keras.models.Sequential()

model.add(pretrained_model)

model.add(tf.keras.layers.GlobalAveragePooling2D())

model.add(tf.keras.layers.Dense(1024, activation='relu'))
model.add(tf.keras.layers.Dense(512, activation='relu'))
model.add(tf.keras.layers.Dense(13, activation='softmax'))

model.compile(optimizer = 'adam',
                loss='categorical_crossentropy',metrics = ['accuracy'])

history = model.fit(train_dataset_aug, validation_data=test_dataset_aug, epochs = 150)

plt.plot(history.history['accuracy'], label='accuracy')
plt.plot(history.history['val_accuracy'], label = 'val_accuracy')
plt.xlabel('Epoch')
plt.ylabel('Accuracy')
plt.ylim([0.1, 1])
plt.legend(loc='lower right')

import cv2
img=cv2.imread('/content/dataset/flowers/flowers/test_actual/')

img= np.random.randint(0,10,(224,224,3))
img.shape

img=np.expand_dims(x,axis=0)
img.shape

model.predict(x)